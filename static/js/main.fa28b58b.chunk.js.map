{"version":3,"sources":["components/ToDoList.module.css","components/AddTodo.module.css","components/Context.js","components/ToDoItem.js","components/ToDoList.js","components/AddTodo.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Context","React","createContext","ToDoItem","todo","index","ChangeCheckbox","removeTodo","useContext","className","completed","type","onChange","id","checked","title","onClick","ToDoList","props","style","listStyle","todos","map","AddTodo","addTodos","useState","value","setValue","form","onSubmit","event","preventDefault","trim","e","target","App","setTodos","useEffect","fetch","then","response","json","Provider","filter","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,UAAY,8B,gBCA9BD,EAAOC,QAAU,CAAC,KAAO,wB,gJCGVC,G,MAFCC,IAAMC,iB,OC4BPC,EAtBE,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,eACrBC,EAAcC,qBAAWR,GAAzBO,WAEP,OACI,+BACI,uBAAME,UAAWL,EAAKM,UAAY,eAAiB,KAAnD,UACA,uBAAOC,KAAK,WAAWC,SAAU,kBAAMN,EAAeF,EAAKS,KAAKC,QAASV,EAAKM,YAC9E,iCAASL,EAAQ,EAAI,MAChBD,EAAKW,SAGV,wBAAQC,QAAS,kBAAIT,EAAWH,EAAKS,KAArC,sBCCGI,MAff,SAAkBC,GACd,OACI,oBAAIT,UAAWU,IAAMC,UAArB,SACMF,EAAMG,MAAMC,KAAI,SAAClB,EAAKC,GACpB,OAAO,cAAC,EAAD,CAAUD,KAAMA,EAAoBC,MAAOA,EAAOC,eAAgBY,EAAMZ,gBAA7CF,EAAKS,U,gBCiBxCU,EAtBC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACFC,mBAAS,IADP,mBACrBC,EADqB,KACdC,EADc,KAc5B,OACQ,uBAAMlB,UAAWU,IAAMS,KAAMC,SAXrC,SAAuBC,GACnBA,EAAMC,iBAGFL,EAAMM,SACNR,EAASE,GACTC,EAAS,MAKT,UACI,uBAAOD,MAAOA,EAAOd,SAAU,SAACqB,GAAD,OAAON,EAASM,EAAEC,OAAOR,UACxD,wBAAQf,KAAM,SAAd,qBCgCDwB,MAhDf,WAAgB,IAAD,EACeV,mBAAS,IADxB,mBACJJ,EADI,KACGe,EADH,KAkCX,OA/BAC,qBAAU,WACNC,MAAM,wDACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAlB,GACFe,EAASf,QAElB,IA0BC,cAAC,EAAQqB,SAAT,CAAkBhB,MAAO,CAACnB,WAbX,SAACM,GAChBuB,EAASf,EAAMsB,QAAO,SAAAvC,GAAI,OAAIA,EAAKS,KAAOA,QAY1C,SACI,sBAAKJ,UAAW,UAAhB,UACI,4CACA,cAAC,EAAD,CAASe,SAZrB,SAAkBT,GACdqB,EAASf,EAAMuB,OAAO,CAAC,CACnB7B,QACAF,GAAIgC,KAAKC,MACTpC,WAAW,SASNW,EAAM0B,OACH,cAAC,EAAD,CAAU1B,MAAOA,EAAOf,eA5BnB,SAACO,GACduB,EAASf,EAAMC,KAAI,SAAAlB,GAIf,OAHIA,EAAKS,KAAOA,IACZT,EAAKM,WAAaN,EAAKM,WAEpBN,SAwBD,+CClCP4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fa28b58b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listStyle\":\"ToDoList_listStyle__3lIPW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddTodo_form__3l0Wt\"};","import React from 'react'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import React,{useContext} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport style from './ToDoItem.module.css'\r\nimport Context from \"./Context\";\r\n\r\n\r\n\r\n\r\nconst ToDoItem = ({todo, index, ChangeCheckbox}) => {\r\n    const {removeTodo} = useContext(Context)\r\n\r\n    return (\r\n        <li>\r\n            <span className={todo.completed ? 'itemCrossOut' : null}>\r\n            <input type=\"checkbox\" onChange={() => ChangeCheckbox(todo.id)} checked={todo.completed}/>\r\n            <strong>{index + 1 + ' '}</strong>\r\n                {todo.title}\r\n            </span>\r\n\r\n            <button onClick={()=>removeTodo(todo.id)}>&times;</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nToDoItem.propTypes = {\r\n    todo: PropTypes.object,\r\n    index: PropTypes.number,\r\n    ChangeCheckbox: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ToDoItem","import React from 'react'\r\nimport style from './ToDoList.module.css'\r\nimport PropTypes from 'prop-types'\r\nimport ToDoItem from \"./ToDoItem\";\r\n\r\nfunction ToDoList(props) {\r\n    return(\r\n        <ul className={style.listStyle}>\r\n            { props.todos.map((todo,index) =>{\r\n                return <ToDoItem todo={todo} key={todo.id} index={index} ChangeCheckbox={props.ChangeCheckbox}/>\r\n            }) }\r\n        </ul>\r\n    )\r\n}\r\n\r\nToDoList.propTypes = {\r\n    todos:PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    ChangeCheckbox:PropTypes.func.isRequired\r\n}\r\n\r\nexport default ToDoList","import React, {useState} from 'react'\r\nimport style from './AddTodo.module.css'\r\n\r\n\r\nconst AddTodo = ({addTodos}) => {\r\n    const [value, setValue] = useState('')\r\n\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault()\r\n\r\n\r\n        if (value.trim()) {\r\n            addTodos(value)\r\n            setValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n            <form className={style.form} onSubmit={submitHandler}>\r\n                <input value={value} onChange={(e) => setValue(e.target.value)}/>\r\n                <button type={'submit'}>Add</button>\r\n            </form>\r\n    )\r\n}\r\n\r\nexport default AddTodo","import React, {useState, useEffect} from 'react'\nimport ToDoList from \"./components/ToDoList\";\nimport Context from './components/Context'\nimport AddTodo from \"./components/AddTodo\";\n\nfunction App() {\n    const [todos, setTodos] = useState([])\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/todos?_limit=10')\n            .then(response => response.json())\n            .then(todos => {\n                setTodos(todos)\n            })\n    }, [])\n\n    const\n        ChangeCheckbox = (id) => {\n            setTodos(todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed\n                }\n                return todo\n            }))\n        }\n\n\n    const removeTodo = (id) => {\n        setTodos(todos.filter(todo => todo.id !== id))\n    }\n\n    function addTodos(title) {\n        setTodos(todos.concat([{\n            title,\n            id: Date.now(),\n            completed: false\n        }]))\n    }\n\n    return (\n        <Context.Provider value={{removeTodo}}>\n            <div className={'wrapper'}>\n                <h1>React TODO</h1>\n                <AddTodo addTodos={addTodos}/>\n                {todos.length ?\n                    <ToDoList todos={todos} ChangeCheckbox={ChangeCheckbox}/>\n                    : <p>No todos</p>\n                }\n            </div>\n        </Context.Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}